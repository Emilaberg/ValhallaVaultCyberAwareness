{
	"info": {
		"_postman_id": "ad7755fa-dfad-496e-97ff-7111929b87d5",
		"name": "ValhallaTest",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "33871280"
	},
	"item": [
		{
			"name": "GetCategory",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response has correct variables\", function(){\r",
							"    let jsonData = pm.response.json();\r",
							"    if (Array.isArray(jsonData)){\r",
							"        jsonData.forEach(function(category) {\r",
							"            pm.expect(category).to.have.property(\"id\");\r",
							"            pm.expect(category).to.have.property(\"categoryName\");\r",
							"\r",
							"        });\r",
							"    }\r",
							"});\r",
							"\r",
							"pm.test(\"Response must be an array\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.be.an(\"array\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response array is not empty\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.be.an('array').that.is.not.empty;\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://localhost:7257/api/Category",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "7257",
					"path": [
						"api",
						"Category"
					]
				}
			},
			"response": []
		},
		{
			"name": "PostCategory",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var response = pm.response.json()\r",
							"var id = response.id\r",
							"\r",
							"pm.globals.set(\"getID\", id)\r",
							"\r",
							"pm.test(\"CategoryName is not empty\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.CategoryName).to.not.be.null;\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"CategoryName\": \"New Category\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:7257/api/Category",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "7257",
					"path": [
						"api",
						"Category"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetById",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Category has the right id\", function (){\r",
							"   var jsonData = pm.response.json();\r",
							"   var getId = pm.variables.get(\"GetID\");\r",
							"   pm.expect(jsonData.Id).to.eql(getId);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://localhost:7257/api/Category/{{getID}}",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "7257",
					"path": [
						"api",
						"Category",
						"{{getID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "PutCategory",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var response = pm.response.json();\r",
							"\r",
							"var CategoryName = response.CategoryName;\r",
							"\r",
							"pm.globals.set(\"ChangedName\", CategoryName);\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n     \"id\": {{getID}},\r\n    \"CategoryName\": \"The name is changed\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:7257/api/Category/{{getID}}",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "7257",
					"path": [
						"api",
						"Category",
						"{{getID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetAnotherCategory",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Category has the right id\", function (){\r",
							"   var jsonData = pm.response.json();\r",
							"   var getId = pm.variables.get(\"GetID\");\r",
							"   pm.expect(jsonData.Id).to.eql(getId);\r",
							"});\r",
							"\r",
							"pm.test(\"Category has the right name\", function (){\r",
							"    var jsonData = pm.response.json();\r",
							"    var changedName = pm.variables.get(\"Name is changed\");\r",
							"    pm.expect(jsonData.CategoryName).to.eql(changedName);\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://localhost:7257/api/Category/{{getID}}",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "7257",
					"path": [
						"api",
						"Category",
						"{{getID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "DeleteCategory",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Category has the right id\", function (){\r",
							"   var jsonData = pm.response.json();\r",
							"   var getId = pm.variables.get(\"GetID\");\r",
							"   pm.expect(jsonData.Id).to.eql(getId);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://localhost:7257/api/Category/{{getID}}",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "7257",
					"path": [
						"api",
						"Category",
						"{{getID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetAnotherById",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://localhost:7257/api/Category/{{getID}}",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "7257",
					"path": [
						"api",
						"Category",
						"{{getID}}"
					]
				}
			},
			"response": []
		}
	]
}